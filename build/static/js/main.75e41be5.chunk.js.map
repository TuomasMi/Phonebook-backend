{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","messageColor","className","Filter","props","value","filter","onChange","handler","PersonForm","onSubmit","newName","nameHandler","newNumber","numberHandler","type","Persons","style","listStyleType","margin","padding","personArray","map","person","name","number","onClick","remove","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","setMessageColor","useEffect","personService","initialPersons","personsToShow","toLowerCase","includes","event","target","preventDefault","personObject","find","window","confirm","returnedPerson","setTimeout","concat","catch","error","console","log","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e41be5.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nconst Notification = ({ message, messageColor }) => {\n  if (message === null) {\n    return null;\n  }\n  if (messageColor === \"red\") {\n    return <div className=\"errorMessage\">{message}</div>;\n  } else {\n    return <div className=\"message\">{message}</div>;\n  }\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [messageColor, setMessageColor] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addNumber = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    if (persons.find((person) => person.name === newName)) {\n      if (\n        window.confirm(\n          `${personObject.name} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const id = persons.find((person) => person.name === newName).id;\n        personService.update(id, personObject).then((returnedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id !== id ? person : returnedPerson\n            )\n          );\n        });\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage(`Changed ${personObject.name} number`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setMessage(`Added ${personObject.name}`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          console.log(error.response.data);\n          setMessageColor(\"red\");\n          setMessage(JSON.stringify(error.response.data));\n          setTimeout(() => {\n            setMessage(null);\n            setMessageColor(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const personsToShow =\n    filter === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(filter.toLowerCase())\n        );\n\n  const removeNumber = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService.remove(person.id).then(() => {\n        personService.getAll().then((response) => {\n          setPersons(response);\n        });\n      });\n      setMessage(`Deleted ${person.name}`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageColor={messageColor} />\n      <Filter filter={filter} handler={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        onSubmit={addNumber}\n        newName={newName}\n        nameHandler={handleNameChange}\n        newNumber={newNumber}\n        numberHandler={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons personArray={personsToShow} remove={removeNumber} />\n    </div>\n  );\n};\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input value={props.filter} onChange={props.handler} />\n    </div>\n  );\n};\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.onSubmit}>\n        <div>\n          name: <input value={props.newName} onChange={props.nameHandler} />\n        </div>\n        <div>\n          number:{\" \"}\n          <input value={props.newNumber} onChange={props.numberHandler} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst Persons = (props) => {\n  return (\n    <div>\n      <ul style={{ listStyleType: \"none\", margin: 0, padding: 0 }}>\n        {props.personArray.map((person) => (\n          <li key={person.name}>\n            {person.name} {person.number}{\" \"}\n            <button onClick={() => props.remove(person)}>delete </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}